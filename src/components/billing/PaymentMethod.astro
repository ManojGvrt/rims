---
import Button from '../Button.astro';

interface CardDetails {
  last4: string;
  expiry: string;
  isDefault?: boolean;
}

interface Props {
  cards: CardDetails[];
}

const { cards } = Astro.props;
---

<div class="payment-info neo-card">
  <div class="card-header">
    <h3>Payment Method</h3>
    <Button variant="secondary" size="small">Add New Card</Button>
  </div>
  <div class="card-content">
    <div class="payment-methods">
      {cards.map(card => (
        <div class={`payment-method ${card.isDefault ? 'active' : ''}`}>
          <div class="card-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor">
              <rect x="3" y="5" width="18" height="14" rx="2" stroke-width="2"/>
              <path d="M3 10h18" stroke-width="2"/>
            </svg>
          </div>
          <div class="card-details">
            <span class="card-number">•••• {card.last4}</span>
            <span class="card-expiry">Expires {card.expiry}</span>
          </div>
          <div class="card-actions">
            <button class="action-btn" title="Edit">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7" stroke-width="2"/>
                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z" stroke-width="2"/>
              </svg>
            </button>
            <button class="action-btn" title="Remove">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M3 6h18" stroke-width="2"/>
                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2" stroke-width="2"/>
              </svg>
            </button>
          </div>
          {card.isDefault && <div class="default-badge">Default</div>}
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .payment-info {
    padding: 2rem;
  }

  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  h3 {
    font-family: var(--primary-font);
    color: var(--secondary-color);
    font-size: 1.25rem;
  }

  .payment-methods {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .payment-method {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .payment-method.active {
    border-color: var(--accent-color);
  }

  .card-icon {
    color: var(--secondary-color);
  }

  .card-details {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .card-number {
    color: var(--secondary-color);
    font-weight: 500;
  }

  .card-expiry {
    font-size: 0.875rem;
    color: var(--secondary-color);
    opacity: 0.7;
  }

  .card-actions {
    margin-left: auto;
    display: flex;
    gap: 0.5rem;
  }

  .action-btn {
    background: none;
    border: none;
    padding: 0.5rem;
    color: var(--secondary-color);
    opacity: 0.7;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }

  .action-btn:hover {
    opacity: 1;
  }

  .default-badge {
    position: absolute;
    top: -0.5rem;
    right: -0.5rem;
    background: var(--accent-color);
    color: var(--primary-color);
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
  }

  @media (max-width: 768px) {
    .payment-info {
      padding: 1.5rem;
    }

    .card-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .payment-method {
      flex-wrap: wrap;
    }

    .card-actions {
      width: 100%;
      justify-content: flex-end;
      margin-top: 1rem;
    }
  }
</style>
