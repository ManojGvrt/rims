---
interface Props {
  credits: number;
  designsCount: number;
  class?: string;
}

const { credits, designsCount, class: className = '' } = Astro.props;
---

<div class:list={['stats-grid', className]}>
  <div class="stat-card">
    <div class="stat-content">
      <h3>Available Credits</h3>
      <p class="stat-value">{credits}</p>
    </div>
    <a href="/billing" class="add-credits">Add Credits</a>
  </div>
  <div class="stat-card">
    <div class="stat-content">
      <h3>Total Designs</h3>
      <p class="stat-value">{designsCount}</p>
    </div>
    <a href="/designs" class="view-designs">View All</a>
  </div>
</div>

<style>
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .stat-card {
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .stat-content h3 {
    color: var(--secondary-color);
    font-size: 0.9rem;
    font-weight: 500;
    opacity: 0.8;
    margin-bottom: 0.5rem;
  }

  .stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--secondary-color);
    font-family: var(--primary-font);
  }

  .add-credits, .view-designs {
    color: var(--accent-color);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .add-credits:hover, .view-designs:hover {
    color: color-mix(in srgb, var(--accent-color) 80%, white);
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
