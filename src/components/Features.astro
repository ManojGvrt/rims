---
interface Feature {
  title: string;
  description: string;
  icon?: string;
}

interface Props {
  title: string;
  features: Feature[];
  class?: string;
}

const { title, features, class: className = '' } = Astro.props;
---

<section class:list={['features', className]}>
  <div class="container">
    <h2>{title}</h2>
    <div class="features-grid">
      {features.map(feature => (
        <div class="feature-card">
          {feature.icon && <span class="icon">{feature.icon}</span>}
          <h3>{feature.title}</h3>
          <p>{feature.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .features {
    position: relative;
    z-index: 2;
    background: var(--primary-color);
    padding: 6rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  h2 {
    font-size: 3rem;
    text-align: center;
    margin-bottom: 4rem;
    background: linear-gradient(135deg, #fff 0%, var(--accent-color) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-family: var(--primary-font);
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 20px;
    padding: 2rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: transform 0.3s ease;
  }

  .feature-card:hover {
    transform: translateY(-5px);
  }

  .feature-card h3 {
    color: var(--accent-color);
    font-size: 1.5rem;
    margin-bottom: 1rem;
    font-family: var(--primary-font);
  }

  .feature-card p {
    color: #aaa;
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    .features {
      padding: 4rem 0;
    }

    h2 {
      font-size: 2.5rem;
    }
  }
</style>
