---
import Button from './Button.astro';

interface Props {
  currentPage: number;
  totalPages: number;
  onPageChange?: string; // Client-side function name
}

const { 
  currentPage = 1,
  totalPages = 1,
  onPageChange = 'handlePageChange'
} = Astro.props;

const pages = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<div class="pagination">
  <Button 
    variant="secondary" 
    disabled={currentPage === 1}
  >
    Previous
  </Button>
  
  <div class="page-numbers">
    {pages.map(page => (
      <button 
        class:list={['page', { active: page === currentPage }]}
        disabled={page === currentPage}
        data-page={page}
      >
        {page}
      </button>
    ))}
  </div>

  <Button 
    variant="secondary"
    disabled={currentPage === totalPages}
  >
    Next
  </Button>
</div>

<style>
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
  }

  .page-numbers {
    display: flex;
    gap: 0.5rem;
  }

  .page {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid rgba(245, 245, 240, 0.1);
    border-radius: 8px;
    background: none;
    color: var(--secondary-color);
    font-weight: bold;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .page:disabled {
    cursor: default;
  }

  .page:not(:disabled):hover {
    border-color: var(--accent-color);
  }

  .page.active {
    background: var(--accent-color);
    border-color: var(--accent-color);
    color: var(--primary-color);
  }

  @media (max-width: 768px) {
    .pagination {
      flex-direction: column;
      gap: 1rem;
    }

    .page-numbers {
      order: -1;
    }
  }
</style>
