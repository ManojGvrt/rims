---
interface Props {
  title?: string;
  description?: string;
  icon?: string;
  variant?: 'default' | 'highlight' | 'success' | 'warning' | 'error';
  size?: 'small' | 'medium' | 'large';
  interactive?: boolean;
  href?: string;
}

const {
  title,
  description,
  icon,
  variant = 'default',
  size = 'medium',
  interactive = false,
  href
} = Astro.props;

const Element = href ? 'a' : 'div';
---

<Element
  class:list={[
    'card',
    `card--${variant}`,
    `card--${size}`,
    { 'card--interactive': interactive }
  ]}
  href={href}
>
  <div class="card-content">
    {icon && (
      <div class:list={['card-icon', `card-icon--${variant}`]}>
        <img src={`/icons/${icon}.svg`} alt="" width="24" height="24" />
      </div>
    )}
    
    <div class="card-text">
      {title && <h3 class="card-title">{title}</h3>}
      {description && <p class="card-description">{description}</p>}
    </div>

    <div class="card-body">
      <slot />
    </div>

    <div class="card-footer">
      <slot name="footer" />
    </div>
  </div>
</Element>

<style>
  .card {
    background: var(--primary-color);
    border: 1px solid rgba(245, 245, 240, 0.1);
    border-radius: 12px;
    overflow: hidden;
    text-decoration: none;
    color: inherit;
    transition: all 0.2s ease;
  }

  /* Variants */
  .card--highlight {
    background: linear-gradient(135deg,
      color-mix(in srgb, var(--accent-color) 10%, var(--primary-color)),
      var(--primary-color)
    );
  }

  .card--success {
    border-color: rgba(76, 175, 80, 0.3);
  }

  .card--warning {
    border-color: rgba(255, 152, 0, 0.3);
  }

  .card--error {
    border-color: rgba(244, 67, 54, 0.3);
  }

  /* Sizes */
  .card--small .card-content {
    padding: 1rem;
  }

  .card--medium .card-content {
    padding: 1.5rem;
  }

  .card--large .card-content {
    padding: 2rem;
  }

  /* Interactive */
  .card--interactive {
    cursor: pointer;
  }

  .card--interactive:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .card--interactive:active {
    transform: translateY(-1px);
  }

  /* Content */
  .card-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
  }

  .card-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 8px;
    background: rgba(245, 245, 240, 0.05);
  }

  .card-icon img {
    opacity: 0.8;
  }

  .card-icon--highlight {
    background: rgba(255, 112, 67, 0.1);
  }

  .card-icon--success {
    background: rgba(76, 175, 80, 0.1);
  }

  .card-icon--warning {
    background: rgba(255, 152, 0, 0.1);
  }

  .card-icon--error {
    background: rgba(244, 67, 54, 0.1);
  }

  .card-title {
    color: var(--secondary-color);
    font-size: 1.25rem;
    margin: 0;
    font-family: var(--primary-font);
  }

  .card-description {
    color: #aaa;
    font-size: 0.9rem;
    margin: 0;
    line-height: 1.5;
  }

  .card-body {
    flex: 1;
  }

  .card-footer {
    margin-top: auto;
    padding-top: 1rem;
    border-top: 1px solid rgba(245, 245, 240, 0.1);
  }

  @media (max-width: 768px) {
    .card {
      border-radius: 8px;
    }

    .card--large .card-content {
      padding: 1.5rem;
    }
  }
</style>
